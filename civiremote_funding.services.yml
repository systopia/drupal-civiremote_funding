parameters:
  civiremote_funding.cmrf_connector_config_key: cmrf_connector

services:
  _defaults:
    autowire: true
    public: false # Controller classes and services directly fetched from container need to be public

  civiremote_funding.logger:
    parent: logger.channel_base
    arguments: [ 'civiremote_funding' ]

  civiremote_funding.settings:
    class: Drupal\Core\Config\ImmutableConfig
    factory: [ 'Drupal', 'config' ]
    arguments: [ 'civiremote_funding.settings' ]

  civiremote_funding.civiremote.settings:
    class: Drupal\Core\Config\ImmutableConfig
    factory: ['Drupal', 'config']
    arguments: ['civiremote.settings']

  Drupal\civiremote_funding\RemotePage\RemotePageClient:
    class: Drupal\civiremote_funding\RemotePage\RemotePageClient
    factory: ['Drupal\civiremote_funding\RemotePage\RemotePageClient', 'create']
    arguments:
      $cmrfCore: '@cmrf_core.core'
      $config: '@civiremote_funding.civiremote.settings'
      $connectorConfigKey: '%civiremote_funding.cmrf_connector_config_key%'
      $httpClient: '@http_client'

  Drupal\civiremote_funding\RemotePage\RemotePageProxy:
    class: Drupal\civiremote_funding\RemotePage\RemotePageProxy
    arguments:
      $logger: '@civiremote_funding.logger'

  Drupal\civiremote_funding\Api\CiviCRMApiClientInterface:
    class: Drupal\civiremote_funding\Api\CiviCRMApiClient
    factory: ['Drupal\civiremote_funding\Api\CiviCRMApiClient', 'create']
    arguments:
      $cmrfCore: '@cmrf_core.core'
      $config: '@civiremote_funding.civiremote.settings'
      $connectorConfigKey: '%civiremote_funding.cmrf_connector_config_key%'

  Drupal\civiremote_funding\Api\FundingApi:
    class: Drupal\civiremote_funding\Api\FundingApi
    public: true

  Drupal\civiremote_funding\Controller\DashboardController:
    class: Drupal\civiremote_funding\Controller\DashboardController
    public: true

  Drupal\civiremote_funding\Access\RemoteContactIdProviderInterface:
    class: Drupal\civiremote_funding\Access\RemoteContactIdProvider
    arguments:
      - '@current_user'
    public: true

  Drupal\civiremote_funding\Controller\ApplicationController:
    class: Drupal\civiremote_funding\Controller\ApplicationController
    public: true

  Drupal\civiremote_funding\Controller\NewApplicationController:
    class: Drupal\civiremote_funding\Controller\NewApplicationController
    public: true

  Drupal\civiremote_funding\Controller\FundingCaseController:
    class: Drupal\civiremote_funding\Controller\FundingCaseController
    public: true

  Drupal\civiremote_funding\Controller\TransferContractController:
    class: Drupal\civiremote_funding\Controller\TransferContractController
    public: true

  Drupal\civiremote_funding\Form\RequestHandler\AddApplicationFormRequestHandler:
    class: Drupal\civiremote_funding\Form\RequestHandler\AddApplicationFormRequestHandler
    public: true

  Drupal\civiremote_funding\Form\RequestHandler\NewApplicationFormRequestHandler:
    class: Drupal\civiremote_funding\Form\RequestHandler\NewApplicationFormRequestHandler
    public: true

  Drupal\civiremote_funding\Form\RequestHandler\ApplicationFormRequestHandler:
    class: Drupal\civiremote_funding\Form\RequestHandler\ApplicationFormRequestHandler
    public: true

  Drupal\civiremote_funding\Form\RequestHandler\NewFundingCaseFormRequestHandler:
    class: Drupal\civiremote_funding\Form\RequestHandler\NewFundingCaseFormRequestHandler
    public: true

  Drupal\civiremote_funding\Form\RequestHandler\FundingCaseFormRequestHandler:
    class: Drupal\civiremote_funding\Form\RequestHandler\FundingCaseFormRequestHandler
    public: true

  Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerFiles:
    class: Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerFiles
    arguments:
      $logger: '@civiremote_funding.logger'

  Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerAction:
    class: Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerAction
    arguments:
      $messenger: '@messenger'
      $requestStack: '@request_stack'

  Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerInterface:
    class: Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerChain
    arguments:
      - '@Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerFiles'
      - '@Drupal\civiremote_funding\Form\ResponseHandler\FormResponseHandlerAction'
    public: true

  Drupal\civiremote_funding\File\FundingFileStorage:
    class: Drupal\civiremote_funding\File\FundingFileStorage
    factory: ['@entity_type.manager', 'getStorage']
    arguments:
      - 'civiremote_funding_file'

  Drupal\civiremote_funding\File\TokenGenerator: ~

  Drupal\civiremote_funding\File\FundingFileManager:
    class: Drupal\civiremote_funding\File\FundingFileManager
    arguments:
      $fileRepository: '@file.repository'
      $fileStorage: '@civiremote_funding.drupal.file.storage'
      $fileSystem: '@file_system'
      $fileUsage: '@file.usage'
    public: true

  Drupal\civiremote_funding\File\FundingFileHttpClient:
    class: Drupal\civiremote_funding\File\FundingFileHttpClient

  civiremote_funding.drupal.file.storage:
    class: Drupal\file\FileStorage
    factory: ['@entity_type.manager', 'getStorage']
    arguments:
      - 'file'

  Drupal\civiremote_funding\File\FundingFileDownloader:
    class: Drupal\civiremote_funding\File\FundingFileDownloader
    arguments:
      $fileRepository: '@file.repository'
      $fileStorage: '@civiremote_funding.drupal.file.storage'
      $logger: '@civiremote_funding.logger'
      $mimeTypeGuesser: '@file.mime_type.guesser'

  Drupal\civiremote_funding\File\FundingFileRouter:
    class: Drupal\civiremote_funding\File\FundingFileRouter
    arguments:
      $urlGenerator: '@url_generator'
    public: true

  Drupal\civiremote_funding\File\FundingFileDownloadHook:
    class: Drupal\civiremote_funding\File\FundingFileDownloadHook
    public: true

  Drupal\civiremote_funding\Controller\TokenFileDownloadController:
    class: Drupal\civiremote_funding\Controller\TokenFileDownloadController
    public: true

  Drupal\civiremote_funding\ViewTranslator:
    class: Drupal\civiremote_funding\ViewTranslator
    arguments:
      $configFactory: '@config.factory'
      $languageManager: '@language_manager'
      $translator: '@string_translation'
    public: true

  Drupal\civiremote_funding\EventSubscriber\ViewTranslationSubscriber:
    class: Drupal\civiremote_funding\EventSubscriber\ViewTranslationSubscriber
    arguments:
      - '@Drupal\civiremote_funding\ViewTranslator'
    tags:
      - { name: event_subscriber }

  Drupal\civiremote_funding\Controller\ApplicationHistoryController:
    class: Drupal\civiremote_funding\Controller\ApplicationHistoryController
    public: true

  Drupal\civiremote_funding\Controller\ApplicationTemplateRenderController:
    class: Drupal\civiremote_funding\Controller\ApplicationTemplateRenderController
    public: true

  Drupal\civiremote_funding\Controller\TransferContractDownloadController:
    class: Drupal\civiremote_funding\Controller\TransferContractDownloadController
    public: true

  Drupal\civiremote_funding\JsonForms\Configurator\FileUploadArrayFactoryConfigurator:
    class: Drupal\civiremote_funding\JsonForms\Configurator\FileUploadArrayFactoryConfigurator
    arguments:
      - '@civiremote_funding.settings'
